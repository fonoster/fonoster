// source: applications.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.fonoster.applications.v1beta2.Application', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.ApplicationType', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.CreateApplicationRequest', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.CreateApplicationResponse', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.DeleteApplicationRequest', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.DeleteApplicationResponse', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ExpectedTextType', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.GetApplicationRequest', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.ListApplicationsRequest', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.ListApplicationsResponse', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.ProductContainer', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.UpdateApplicationRequest', null, global);
goog.exportSymbol('proto.fonoster.applications.v1beta2.UpdateApplicationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.ProductContainer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.ProductContainer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.ProductContainer.displayName = 'proto.fonoster.applications.v1beta2.ProductContainer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.Application = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.Application, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.Application.displayName = 'proto.fonoster.applications.v1beta2.Application';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.CreateApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.CreateApplicationRequest.displayName = 'proto.fonoster.applications.v1beta2.CreateApplicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.CreateApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.CreateApplicationResponse.displayName = 'proto.fonoster.applications.v1beta2.CreateApplicationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.GetApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.GetApplicationRequest.displayName = 'proto.fonoster.applications.v1beta2.GetApplicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.ListApplicationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.ListApplicationsRequest.displayName = 'proto.fonoster.applications.v1beta2.ListApplicationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fonoster.applications.v1beta2.ListApplicationsResponse.repeatedFields_, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.ListApplicationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.ListApplicationsResponse.displayName = 'proto.fonoster.applications.v1beta2.ListApplicationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.UpdateApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.UpdateApplicationRequest.displayName = 'proto.fonoster.applications.v1beta2.UpdateApplicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.UpdateApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.UpdateApplicationResponse.displayName = 'proto.fonoster.applications.v1beta2.UpdateApplicationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.DeleteApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.DeleteApplicationRequest.displayName = 'proto.fonoster.applications.v1beta2.DeleteApplicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.DeleteApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.DeleteApplicationResponse.displayName = 'proto.fonoster.applications.v1beta2.DeleteApplicationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.displayName = 'proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.repeatedFields_, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.displayName = 'proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.displayName = 'proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.repeatedFields_, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.displayName = 'proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.repeatedFields_, null);
};
goog.inherits(proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.displayName = 'proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.ProductContainer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.ProductContainer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.ProductContainer.toObject = function(includeInstance, msg) {
  var f, obj = {
productRef: jspb.Message.getFieldWithDefault(msg, 1, ""),
config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
credentials: (f = msg.getCredentials()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.ProductContainer;
  return proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.ProductContainer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductRef(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setCredentials(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.ProductContainer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getCredentials();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product_ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.getProductRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer} returns this
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.setProductRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer} returns this
*/
proto.fonoster.applications.v1beta2.ProductContainer.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer} returns this
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct credentials = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.getCredentials = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer} returns this
*/
proto.fonoster.applications.v1beta2.ProductContainer.prototype.setCredentials = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.ProductContainer} returns this
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.clearCredentials = function() {
  return this.setCredentials(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.ProductContainer.prototype.hasCredentials = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.Application.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.Application.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.Application} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.Application.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, 0),
endpoint: jspb.Message.getFieldWithDefault(msg, 4, ""),
textToSpeech: (f = msg.getTextToSpeech()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
speechToText: (f = msg.getSpeechToText()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
intelligence: (f = msg.getIntelligence()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
createdAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
updatedAt: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.Application}
 */
proto.fonoster.applications.v1beta2.Application.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.Application;
  return proto.fonoster.applications.v1beta2.Application.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.Application} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.Application}
 */
proto.fonoster.applications.v1beta2.Application.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.fonoster.applications.v1beta2.ApplicationType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 5:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setTextToSpeech(value);
      break;
    case 6:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setSpeechToText(value);
      break;
    case 7:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setIntelligence(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreatedAt(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.Application.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.Application.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.Application} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.Application.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTextToSpeech();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getSpeechToText();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getIntelligence();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ApplicationType type = 3;
 * @return {!proto.fonoster.applications.v1beta2.ApplicationType}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getType = function() {
  return /** @type {!proto.fonoster.applications.v1beta2.ApplicationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.fonoster.applications.v1beta2.ApplicationType} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string endpoint = 4;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ProductContainer text_to_speech = 5;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getTextToSpeech = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 5));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
*/
proto.fonoster.applications.v1beta2.Application.prototype.setTextToSpeech = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.clearTextToSpeech = function() {
  return this.setTextToSpeech(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.Application.prototype.hasTextToSpeech = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProductContainer speech_to_text = 6;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getSpeechToText = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 6));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
*/
proto.fonoster.applications.v1beta2.Application.prototype.setSpeechToText = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.clearSpeechToText = function() {
  return this.setSpeechToText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.Application.prototype.hasSpeechToText = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProductContainer intelligence = 7;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getIntelligence = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 7));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
*/
proto.fonoster.applications.v1beta2.Application.prototype.setIntelligence = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.clearIntelligence = function() {
  return this.setIntelligence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.Application.prototype.hasIntelligence = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 created_at = 8;
 * @return {number}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 updated_at = 9;
 * @return {number}
 */
proto.fonoster.applications.v1beta2.Application.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.fonoster.applications.v1beta2.Application} returns this
 */
proto.fonoster.applications.v1beta2.Application.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.CreateApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
type: jspb.Message.getFieldWithDefault(msg, 2, 0),
endpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
textToSpeech: (f = msg.getTextToSpeech()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
speechToText: (f = msg.getSpeechToText()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
intelligence: (f = msg.getIntelligence()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.CreateApplicationRequest;
  return proto.fonoster.applications.v1beta2.CreateApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.fonoster.applications.v1beta2.ApplicationType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 4:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setTextToSpeech(value);
      break;
    case 5:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setSpeechToText(value);
      break;
    case 6:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setIntelligence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.CreateApplicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTextToSpeech();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getSpeechToText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getIntelligence();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ApplicationType type = 2;
 * @return {!proto.fonoster.applications.v1beta2.ApplicationType}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.getType = function() {
  return /** @type {!proto.fonoster.applications.v1beta2.ApplicationType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.fonoster.applications.v1beta2.ApplicationType} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string endpoint = 3;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProductContainer text_to_speech = 4;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.getTextToSpeech = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 4));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
*/
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.setTextToSpeech = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.clearTextToSpeech = function() {
  return this.setTextToSpeech(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.hasTextToSpeech = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProductContainer speech_to_text = 5;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.getSpeechToText = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 5));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
*/
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.setSpeechToText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.clearSpeechToText = function() {
  return this.setSpeechToText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.hasSpeechToText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProductContainer intelligence = 6;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.getIntelligence = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 6));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
*/
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.setIntelligence = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.clearIntelligence = function() {
  return this.setIntelligence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.CreateApplicationRequest.prototype.hasIntelligence = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.CreateApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.CreateApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationResponse}
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.CreateApplicationResponse;
  return proto.fonoster.applications.v1beta2.CreateApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.CreateApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationResponse}
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.CreateApplicationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.CreateApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.CreateApplicationResponse} returns this
 */
proto.fonoster.applications.v1beta2.CreateApplicationResponse.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.GetApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.GetApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.GetApplicationRequest}
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.GetApplicationRequest;
  return proto.fonoster.applications.v1beta2.GetApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.GetApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.GetApplicationRequest}
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.GetApplicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.GetApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.GetApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.GetApplicationRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.ListApplicationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.ListApplicationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
pageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsRequest}
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.ListApplicationsRequest;
  return proto.fonoster.applications.v1beta2.ListApplicationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.ListApplicationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsRequest}
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.ListApplicationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.ListApplicationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsRequest} returns this
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsRequest} returns this
 */
proto.fonoster.applications.v1beta2.ListApplicationsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.ListApplicationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.ListApplicationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.fonoster.applications.v1beta2.Application.toObject, includeInstance),
nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsResponse}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.ListApplicationsResponse;
  return proto.fonoster.applications.v1beta2.ListApplicationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.ListApplicationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsResponse}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonoster.applications.v1beta2.Application;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.Application.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.ListApplicationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.ListApplicationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fonoster.applications.v1beta2.Application.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Application items = 1;
 * @return {!Array<!proto.fonoster.applications.v1beta2.Application>}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.fonoster.applications.v1beta2.Application>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fonoster.applications.v1beta2.Application, 1));
};


/**
 * @param {!Array<!proto.fonoster.applications.v1beta2.Application>} value
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsResponse} returns this
*/
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fonoster.applications.v1beta2.Application=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonoster.applications.v1beta2.Application}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fonoster.applications.v1beta2.Application, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsResponse} returns this
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.ListApplicationsResponse} returns this
 */
proto.fonoster.applications.v1beta2.ListApplicationsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.UpdateApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, 0),
endpoint: jspb.Message.getFieldWithDefault(msg, 4, ""),
textToSpeech: (f = msg.getTextToSpeech()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
speechToText: (f = msg.getSpeechToText()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f),
intelligence: (f = msg.getIntelligence()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.UpdateApplicationRequest;
  return proto.fonoster.applications.v1beta2.UpdateApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.fonoster.applications.v1beta2.ApplicationType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 5:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setTextToSpeech(value);
      break;
    case 6:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setSpeechToText(value);
      break;
    case 7:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setIntelligence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.UpdateApplicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTextToSpeech();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getSpeechToText();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
  f = message.getIntelligence();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ApplicationType type = 3;
 * @return {!proto.fonoster.applications.v1beta2.ApplicationType}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getType = function() {
  return /** @type {!proto.fonoster.applications.v1beta2.ApplicationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.fonoster.applications.v1beta2.ApplicationType} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string endpoint = 4;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ProductContainer text_to_speech = 5;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getTextToSpeech = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 5));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
*/
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setTextToSpeech = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.clearTextToSpeech = function() {
  return this.setTextToSpeech(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.hasTextToSpeech = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProductContainer speech_to_text = 6;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getSpeechToText = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 6));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
*/
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setSpeechToText = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.clearSpeechToText = function() {
  return this.setSpeechToText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.hasSpeechToText = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProductContainer intelligence = 7;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.getIntelligence = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 7));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
*/
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.setIntelligence = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.clearIntelligence = function() {
  return this.setIntelligence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationRequest.prototype.hasIntelligence = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.UpdateApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.UpdateApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationResponse}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.UpdateApplicationResponse;
  return proto.fonoster.applications.v1beta2.UpdateApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.UpdateApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationResponse}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.UpdateApplicationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.UpdateApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.UpdateApplicationResponse} returns this
 */
proto.fonoster.applications.v1beta2.UpdateApplicationResponse.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.DeleteApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.DeleteApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.DeleteApplicationRequest}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.DeleteApplicationRequest;
  return proto.fonoster.applications.v1beta2.DeleteApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.DeleteApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.DeleteApplicationRequest}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.DeleteApplicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.DeleteApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.DeleteApplicationRequest} returns this
 */
proto.fonoster.applications.v1beta2.DeleteApplicationRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.DeleteApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.DeleteApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.DeleteApplicationResponse}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.DeleteApplicationResponse;
  return proto.fonoster.applications.v1beta2.DeleteApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.DeleteApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.DeleteApplicationResponse}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.DeleteApplicationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.DeleteApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.DeleteApplicationResponse} returns this
 */
proto.fonoster.applications.v1beta2.DeleteApplicationResponse.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
intelligence: (f = msg.getIntelligence()) && proto.fonoster.applications.v1beta2.ProductContainer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest;
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonoster.applications.v1beta2.ProductContainer;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.ProductContainer.deserializeBinaryFromReader);
      msg.setIntelligence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntelligence();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fonoster.applications.v1beta2.ProductContainer.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductContainer intelligence = 1;
 * @return {?proto.fonoster.applications.v1beta2.ProductContainer}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.prototype.getIntelligence = function() {
  return /** @type{?proto.fonoster.applications.v1beta2.ProductContainer} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.applications.v1beta2.ProductContainer, 1));
};


/**
 * @param {?proto.fonoster.applications.v1beta2.ProductContainer|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest} returns this
*/
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.prototype.setIntelligence = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.prototype.clearIntelligence = function() {
  return this.setIntelligence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceRequest.prototype.hasIntelligence = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse;
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ExpectedTextType = {
  EXACT: 0,
  SIMILAR: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.toObject = function(includeInstance, msg) {
  var f, obj = {
expectedTool: jspb.Message.getFieldWithDefault(msg, 1, ""),
actualTool: jspb.Message.getFieldWithDefault(msg, 2, ""),
passed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
expectedParameters: (f = msg.getExpectedParameters()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
actualParameters: (f = msg.getActualParameters()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
errorMessage: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport;
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedTool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActualTool(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPassed(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExpectedParameters(value);
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setActualParameters(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpectedTool();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActualTool();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getExpectedParameters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getActualParameters();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string expected_tool = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.getExpectedTool = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.setExpectedTool = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string actual_tool = 2;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.getActualTool = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.setActualTool = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool passed = 3;
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.getPassed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.setPassed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional google.protobuf.Struct expected_parameters = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.getExpectedParameters = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
*/
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.setExpectedParameters = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.clearExpectedParameters = function() {
  return this.setExpectedParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.hasExpectedParameters = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Struct actual_parameters = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.getActualParameters = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
*/
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.setActualParameters = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.clearActualParameters = function() {
  return this.setActualParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.hasActualParameters = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string error_message = 6;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.toObject = function(includeInstance, msg) {
  var f, obj = {
humanInput: jspb.Message.getFieldWithDefault(msg, 1, ""),
expectedResponse: jspb.Message.getFieldWithDefault(msg, 2, ""),
aiResponse: jspb.Message.getFieldWithDefault(msg, 3, ""),
evaluationType: jspb.Message.getFieldWithDefault(msg, 4, 0),
passed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
errorMessage: jspb.Message.getFieldWithDefault(msg, 6, ""),
toolEvaluationsList: jspb.Message.toObjectList(msg.getToolEvaluationsList(),
    proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport;
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHumanInput(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedResponse(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAiResponse(value);
      break;
    case 4:
      var value = /** @type {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ExpectedTextType} */ (reader.readEnum());
      msg.setEvaluationType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPassed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 7:
      var value = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.deserializeBinaryFromReader);
      msg.addToolEvaluations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHumanInput();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpectedResponse();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAiResponse();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEvaluationType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPassed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getToolEvaluationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport.serializeBinaryToWriter
    );
  }
};


/**
 * optional string human_input = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getHumanInput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setHumanInput = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string expected_response = 2;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getExpectedResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setExpectedResponse = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ai_response = 3;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getAiResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setAiResponse = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ExpectedTextType evaluation_type = 4;
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ExpectedTextType}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getEvaluationType = function() {
  return /** @type {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ExpectedTextType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ExpectedTextType} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setEvaluationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool passed = 5;
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getPassed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setPassed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string error_message = 6;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated ToolEvaluationReport tool_evaluations = 7;
 * @return {!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport>}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.getToolEvaluationsList = function() {
  return /** @type{!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport, 7));
};


/**
 * @param {!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport>} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
*/
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.setToolEvaluationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.addToolEvaluations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ToolEvaluationReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.prototype.clearToolEvaluationsList = function() {
  return this.setToolEvaluationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.toObject = function(includeInstance, msg) {
  var f, obj = {
scenarioRef: jspb.Message.getFieldWithDefault(msg, 1, ""),
overallPassed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
stepsList: jspb.Message.toObjectList(msg.getStepsList(),
    proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport;
  return proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScenarioRef(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverallPassed(value);
      break;
    case 3:
      var value = new proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport;
      reader.readMessage(value,proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.deserializeBinaryFromReader);
      msg.addSteps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScenarioRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOverallPassed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStepsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport.serializeBinaryToWriter
    );
  }
};


/**
 * optional string scenario_ref = 1;
 * @return {string}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.getScenarioRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.setScenarioRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool overall_passed = 2;
 * @return {boolean}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.getOverallPassed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.setOverallPassed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated StepEvaluationReport steps = 3;
 * @return {!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport>}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.getStepsList = function() {
  return /** @type{!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport, 3));
};


/**
 * @param {!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport>} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} returns this
*/
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.setStepsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.addSteps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.StepEvaluationReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport.prototype.clearStepsList = function() {
  return this.setStepsList([]);
};


/**
 * repeated ScenarioEvaluationReport results = 1;
 * @return {!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport>}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport, 1));
};


/**
 * @param {!Array<!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport>} value
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse} returns this
*/
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport}
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.ScenarioEvaluationReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse} returns this
 */
proto.fonoster.applications.v1beta2.EvaluateIntelligenceResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * @enum {number}
 */
proto.fonoster.applications.v1beta2.ApplicationType = {
  EXTERNAL: 0,
  AUTOPILOT: 1
};

goog.object.extend(exports, proto.fonoster.applications.v1beta2);
